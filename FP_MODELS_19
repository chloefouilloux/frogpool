#### FP MODELS 2019 ########
############################

#As usual, first let's load our sweet packages!
library(dplyr)
library(glmmTMB)
library(DHARMa)
library(AICcmodavg)
library(sjPlot)
library(MASS)
library(ggplot2)

#Let's load in that sweet, sweet 2019 data.
#LET'S TRY THIS UPDATED ONE FROM SEPTEMBER
frog1<- read.csv("frogpool19_v2_reduced_2020-09-03.csv", 
                 header = T,fileEncoding="UTF-8-BOM") #fromg Andrius

head(frog1)

#Let's make a binomial response, just in case


table((frog1$tp_femo_hahneli), frog1$pool_type) 

#First let's start by centering some of our more important variables. 
#For exmaple, a KH of 0 aren't biologically relevant.
#Based on graphs from fp_19, I would say pools with 
#SALINITY should be corrected
#Hardness = 0 is ok
#KH = Should be corrected
#Height is ok
#leaf litter should be corrected

frog1 <- frog1%>%
         tidyr::drop_na(salinity, leaflit_vol_ml)%>% 
         mutate(center_KH = KH - mean(KH),
                center_salt = salinity - mean(salinity), 
                center_leaf = leaflit_vol_ml - mean(leaflit_vol_ml),
                center_invert= invert_diversity- mean(invert_diversity),
                total_other = oophagus_tp + tp_femo_hahneli, 
                other_y_n = ifelse (oophagus_tp > 0, 1, 
                                    ifelse(tp_femo_hahneli > 0, 1, 0)),
                tinc_Y_N = ifelse(tadpoles_tinc > 0, 1, 0)) %>%
          mutate(other_y_n = as.factor(other_y_n), tinc_Y_N =as.factor(tinc_Y_N))

levels(frog1$other_y_n)
frog1$other_y_n<- relevel(frog1$other_y_n, "1")
levels(frog1$other_y_n)
#### So, question one, height and frog species. 
#These data are from singluar pools, sampled only once, so there is no need for a random effect here.

#alright, first let's start with a global model.
#no amphibian diversity, contains species info well summarized by the presence of other radpoles: 
#"sum of all species observed in the pool including adults, calling, 
#dead tadpoles and opportunistic observations after the sampling. 
#ALSO includes femoralis if the pool was discovered with tadpole adding"

#total tadpoles was not used because of huge resinifixtrix count

#choose one of the predators. Predator size sum showed a stronger correlation, so we'll keep that.

#because of the small sample sizes and huge range in tadpole numbers I thought other y/n would be best.
#though tincs only end up with them twice in the whole sample. Which is not great. I was thinking to include tinc:y/N
#but this also ends up fucking up the model because the same data is a response and a predictor.

m1<- glm.nb(tadpoles_tinc~ height + KH + leaflit_vol_ml + predator_size_sum + salinity + 
           other_y_n + water_capacity + hardness + no3 +dens_invert_total + invert_diversity,
         link = "log", data = frog1) 

step(m1)

#tadpoles_tinc ~ KH + leaflit_vol_ml + otheryn + water_capacity + invert

m2<- glm.nb(tadpoles_tinc~ KH + leaflit_vol_ml +other_y_n + water_capacity + invert_diversity, 
            link = "log", data = frog1) 

drop1(m2, test = "Chi") #drop water capacity

m3<- glm.nb(tadpoles_tinc~ KH + leaflit_vol_ml +other_y_n + invert_diversity, link = "log", data = frog1) 

drop1(m3, test = "Chi")

m3_center<- glm.nb(tadpoles_tinc~ center_KH + center_leaf +other_y_n + center_invert, link = "log", data = frog1) 

summary(m3_center)

#MODEL DIAGNOSTICS # ----
#CHECK FOR OVERDISPERSION
res.d<-m3$deviance #residual deviance 
res.d/(63) #0.91 #overdispersion

res <- simulateResiduals(m3, plot = T) 
testDispersion(res)

null<-m3$null.deviance #null deviance

(null-res.d)/null * 100 #explain 58.1 % variance

EP <- resid(m3, type = "pearson")
ED <- resid(m3, type = "deviance")
mu <- predict(m3, type = "response")
E <- frog1$tadpoles_tinc - mu
EP2 <- E / sqrt(0.9138037 * mu)

op <- par(mfrow = c(2, 2))
plot(x = mu, y = E, main = "Response residuals")
plot(x = mu, y = EP, main = "Pearson residuals")
plot(x = mu, y = EP2,
       main = "Pearson residuals scaled")
plot(x = mu, y = ED, main = "Deviance residuals")
par(op)
#no real trends here
op <- par(mfrow = c(2, 2))
plot(m3)
par(op)

#compare to a glm instead
M4 <- glm(tadpoles_tinc~ KH + leaflit_vol_ml +total_other + invert_diversity, family = poisson,
          data = frog1)

llhNB = logLik(m3)
llhPoisson= logLik(M4)
d <- 2 * (llhNB - llhPoisson) #115.1
pval<- 0.5 * pchisq(as.numeric(d), df = 1, lower.tail = F) #tiny

tab_model(m3_center,
          show.r2 = F, 
          show.ngroups = F ,
          show.stat = T,
          string.stat = "z",
          show.icc = F, 
          show.obs = F,
          string.ci = "CI",
          string.est = "Estimates",
          transform = NULL,
          digits = 3,
          digits.p =3,
          pred.labels = c("(Intercept)", 
                          "KH", "Leaf litter (vol/mL)",
                          "Other tadpoles species [N]", 
                          "Invertebrate diversity (count)"), 
          dv.labels = c("Tadpoles presence (count)"))

### Maths == (see write-up document for application)
#all of the variables are already mean centered.
#I want to see how many times more tincs there are when other species are present/abscent
#WARNING: THIS ONLY OCCURS AT n = 2. 
alpha<-coef(summary(m3_center))['(Intercept)', "Estimate"] #other species everything else present
betaKH<- coef(summary(m3_center))['centerKH', "Estimate"]
betaleaf<- coef(summary(m3_center))["centerLeaf", "Estimate"]
betaothersno<- coef(summary(m3_center))['other_y_n0', "Estimate"]
betainvert<-coef(summary(m3_center))['centerinvert', "Estimate"]

otherspresent<- exp(alpha)
otherspresent #0.14

othersnotpresent<- exp(alpha)*exp(betaothersno*1)
othersnotpresent #1.75

othersnotpresent/otherspresent #12.4!!!

#When chemical and physical aspects are help constant, we see that there are 12.4 times more tinctorius tadpoles 

